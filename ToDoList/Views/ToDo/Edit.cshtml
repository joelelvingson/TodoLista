@model ToDoList.ViewModel.ToDoFormViewModel
@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<div class="container">
    <div class="col-sm-offset-4 col-sm-4">
        <h2 id="namnet">@Model.Todo.Name</h2>
        <div class="form-group">
            @*<form name="toDoList" class="col-sm-offset-2">            </form>*@
            @*<div class="form-horizontal">
                <button id="button" class="btn btn-primary">Add</button>
                    <input type="text" name="ListItem" id="namnns" class="form-control" />

                    <label id="fel" style="color:red;"></label>
            </div>*@

        </div>
        <div class="row">
            <div class="col-lg-12">
                <div class="input-group">
                    <input type="text" name="ListItem" id="namnns" class="form-control" placeholder="Namn..."/>
                    <span class="input-group-btn">
                        <span id="button" class="btn btn-primary" type="button">Lägg till</span>
                    </span>
                </div>
                <label id="fel" style="color:red;"></label>
            </div>
        </div>

        <div class="form-group">
            <input id="hamta" type="hidden" ToDoId="@Model.Todo.Id" />
        </div>
        
        
        <ol class="list-group">
            @{ 
                List<ToDoList.Models.Tasks> SorteradLista = new List<ToDoList.Models.Tasks>();
            }
            @foreach (var item in Model.Tasks)
            {
                if(item.status != true)
                {
                <li class="@item.Id list-group-item" taskIdTo="@item.Id" style="@(item.status == true ? "background-color: gray; text-decoration: line-through;" : null)">
                    @item.Name
                    <span class="@item.Id glyphicon glyphicon-remove pull-right"></span>
                </li>
                }
                else
                {
                    SorteradLista.Add(item);
                }



            }
            @foreach (var item in SorteradLista)
            {
                <li class="@item.Id list-group-item" taskIdTo="@item.Id" style="@(item.status == true ? "background-color: gray; text-decoration: line-through;" : null)">
                    @item.Name
                    <span class="@item.Id glyphicon glyphicon-remove pull-right"></span>
                </li>
            }
        </ol>
    </div>
</div>



@section scripts{
    <link rel="stylesheet" href="https://ajax.googleapis.com/ajax/libs/jqueryui/1.11.3/themes/smoothness/jquery-ui.css" />
    <script src="https://ajax.googleapis.com/ajax/libs/jqueryui/1.11.3/jquery-ui.min.js"></script>

    <script>
         
        $(document).ready(function () {
            var IdFranDiv = $('#hamta').attr('ToDoId')
            //$.ajax({

            //    url: "/api/Task?ToDoI=" + IdFranDiv,
            //    type: "GET",
            //    success: function (data) {
            //        for (var i = 0; i < data.length; i++) {
            //            if (data[i].status == true) {
            //                //if (data[i].ToDoId == IdFranDiv)
            //                //{
            //                $('ol').append('<li class="' + data[i].Id + ' list-group-item" taskIdTo="' + data[i].Id + '">' + data[i].Name + '<span class="' + data[i].Id + '100 glyphicon glyphicon-remove pull-right"></span></li>');
            //                //}

            //                $("." + data[i].Id).css("text-decoration", "line-through");
            //                $("." + data[i].Id).css("background-color", "grey");

            //            }
            //            else {
            //                $('ol').prepend('<li class="' + data[i].Id + ' list-group-item" taskIdTo="' + data[i].Id + '">' + data[i].Name + '<span class="' + data[i].Id + '100 glyphicon glyphicon-remove pull-right"></span></li>');
            //            }
            //            $('.' + data[i].Id + '100').on("click", deleteTask);
            //            $('.' + data[i].Id).on("click", movePost);


            //        }

            //    }

            //})


            $('.glyphicon-remove').on("click", deleteTask);
            $(".list-group-item").on("click", movePost);
            $('#button').on("click", create);

            function create() {
                var name = $('#namnns').val();
                var vm =
                {
                    ToDoId: IdFranDiv,
                    name: name
                };

                $.ajax({
                    url: "/api/Task/",
                    method: "post",
                    data: vm,
                    success: function (data) {
                        $('ol').prepend('<li class="' + data.Id + ' list-group-item" taskIdTo="' + data.Id + '">' + data.Name + '<span class="' + data.Id + '100 glyphicon glyphicon-remove pull-right"></span></li>');
                        $('.' + data.Id + '100').on("click", deleteTask);
                        $('.' + data.Id).on("click", movePost);
                        $("#fel").text("");
                        $("#namnns").css("border", "");

                    },
                    error: function () {
                        $("#fel").text("Du måste ange ett namn.");
                        $("#namnns").css("border", "2px solid red");
                    }
                });


            };

            function movePost() {

                var status;

                var color = $(this).css("background-color");
                if (color == "rgb(128, 128, 128)") {
                    $(this).css("text-decoration", "");
                    $(this).animate({ "background-color": "transparent" }, 'slow');


                    status = false;
                    $(this).prependTo('ol');
                }
                else {

                    $(this).css("text-decoration", "line-through");
                    $(this).animate({ "background-color": "gray" }, 'slow');
                    status = true;
                    $(this).appendTo('ol');
                }
                var vm = {
                    Name: $(this).text(),
                    Id: $(this).attr('TaskIdTo'),
                    status: status,
                    ToDoId: IdFranDiv
                };


                $.ajax({
                    url: "/api/task?taskDto=",
                    method: "put",
                    data: vm
                })
            };

            $('input').focus(function () {
                $(this).val('');
            });

            function deleteTask() {
                var button = $(this);
                $.ajax({
                    url: "/api/Task?Id=" + $(this).parents('li').attr("taskIdTo"),
                    method: "DELETE",
                    success: function () {

                    }

                });
                $(this).parents('li').remove();
            };

            $('ol').sortable();
            $("#namnet").on("click", editName);

            function editName() {
                var name = $(this).text();
                $(this).html('');
                $('<input></input>')
                  .attr({
                      'type': 'text',
                      'name': 'fname',
                      'id': 'txt_fullname',
                      'size': '30',
                      'value': name
                  })
                  .appendTo('#namnet');
                $('#txt_fullname').focus();
            };

            $(document).on('blur', '#txt_fullname', function () {
                var name = $(this).val();
                if (name == "" || name == " ") {
                    name = "NULL";
                }
                //alert('Make an AJAX call and pass this parameter >> name=' + name);
                $('#namnet').text(name);
                editNameApi();
            });

            $('#namnet').keypress(function (e) {
                if (e.which == 13) {//Enter key pressed
                    {
                        var name = $(this).val();
                        if (name == "" || name == " ") {
                            name = "NULL";
                        }
                        //alert('Make an AJAX call and pass this parameter >> name=' + name);
                        $('#namnet').text(name);
                        editNameApi();
                    }
                }
            });

            $('#namnns').keypress(function (e) {
                if (e.which == 13) {
                    {
                        create();
                        $(this).val("");
                    }
                }
            });

            function editNameApi() {

                vm = {
                    Name: $("#namnet").text(),
                    Id: IdFranDiv
                };
                console.log(vm.Name);
                console.log(vm.Id);
                $.ajax({

                    url: "/api/Todo?toDoDto=",
                    type: "put",
                    data: vm

                })
            };
        }
 );
    </script>

}

